<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonOpenFile_SVA.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>